{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-4674d648674842bc313f.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","p","fontSize","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","styles","_t$styles","name","post","Box","color","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","href","withPrefix"],"sourceRoot":""}