{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-2022-02-13-diy-subway-led-matrix-sign-index-mdx-63d1c3629d506867070e.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/2022-02-13-diy-subway-led-matrix-sign/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.img, {\n    src: \"/assets/images/2021-04-25-diy-subway-led-matrix-sign/subway_matrix.jpg\",\n    alt: \"Subway LED Matrix\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/versi786/subway-led-matrix\"\n  }, \"Github Repo\")), \"\\n\", React.createElement(_components.h1, null, \"GTFS\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developers.google.com/transit/gtfs\"\n  }, \"GTFS\"), \" is the General Transit Feed Specification, originally developed by Google, which provides a way for users to retreive static data about any transit sytstem. The best way to get an understanding about GTFS is by looking at \", React.createElement(_components.a, {\n    href: \"https://developers.google.com/transit/gtfs/examples/gtfs-feed\"\n  }, \"this\"), \" example GTFS feed. It covers arll the major files that are included in the GTFS Specification. For this project we care most about the following files. Parsing gtfs data is pretty straightforward, since everything is in csv files, and everything has an ID, all we have to do is parse the CSV files, pick out the columns we want, and put all the data into datastructres that are more convenient than the columnar format provided. The parsing code can be found in \", React.createElement(_components.a, {\n    href: \"https://github.com/versi786/subway-led-matrix/blob/master/data/nyct.py#L64\"\n  }, \"NYCT._parse_static_data\"), \".\"), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.code, null, \"stops.txt\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"stops.txt\"), \" provides details about all the stops and stations. For this project are most interested in lines with \", React.createElement(_components.code, null, \"location_type == 1\"), \" (Stop or Platform) and \", React.createElement(_components.code, null, \"location_type == 2\"), \" (Station). When parsing \", React.createElement(_components.code, null, \"stops.txt\"), \" we will map each Stop to it's parent station using the last column in  \", React.createElement(_components.code, null, \"stops.txt\"), \" \", React.createElement(_components.code, null, \"parent_station\"), \". This allows the user to specify which stations they want to monitor, and we can find the next upcoming train at that stop. Each line in this file will also provide a \", React.createElement(_components.code, null, \"stop_id\"), \" which we will use to match to arrival and departure times of trains.\"), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.code, null, \"routes.txt\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"routes.txt\"), \" will provide us with the deails about each line in the system, this will give us the \", React.createElement(_components.code, null, \"route_short_name\"), \", for example \", React.createElement(_components.code, null, \"6\"), \", and the \", React.createElement(_components.code, null, \"route_color\"), \" (green) and \", React.createElement(_components.code, null, \"route_text_color\"), \" (white). The \", React.createElement(_components.code, null, \"route_id\"), \" again will be used with the realtime data to provide which train is arriving at a given station.\"), \"\\n\", React.createElement(_components.h1, null, \"GTFS and the MTA:\"), \"\\n\", React.createElement(_components.p, null, \"You can download the MTA's static GTFS data from \", React.createElement(_components.a, {\n    href: \"http://web.mta.info/developers/developer-data-terms.html\"\n  }, \"here\"), \". Scroll all the way down to the bottom and click \", React.createElement(_components.code, null, \"Yes, I agree to the these terms and conditions\"), \", which will them provide you to a link to Download the \\\"New York City Transit Subway\\\" GTFS data \", React.createElement(_components.a, {\n    href: \"http://web.mta.info/developers/data/nyct/subway/google_transit.zip\"\n  }, \"here\"), \". When you run the matrix script, this data will be automatically downloaded to \", React.createElement(_components.code, null, \"/tmp\"), \" for you.\"), \"\\n\", React.createElement(_components.p, null, \"In order to access the MTA's realtime data you will need to go to \", React.createElement(_components.a, {\n    href: \"https://api.mta.info/#/landing\"\n  }, \"api.mta.info\"), \" and sign up for an account so you can get an API Key. Once you get the API key you will need to save it in a file named \", React.createElement(_components.code, null, \".env\"), \", in the root directory of the cloned \", React.createElement(_components.a, {\n    href: \"https://github.com/versi786/subway-led-matrix\"\n  }, \"github repo\"), \" with a single line:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"MTA_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXX\\n\")), \"\\n\", React.createElement(_components.p, null, \"After sigining in you will then need to download the \", React.createElement(_components.a, {\n    href: \"https://developers.google.com/transit/gtfs-realtime/gtfs-realtime-proto\"\n  }, \"GTFS Realtime Proto File\"), \" and \", React.createElement(_components.a, {\n    href: \"https://api.mta.info/nyct-subway.proto.txt\"\n  }, \"NYCT Subway Proto Extensions\"), \". If you have cloned the \", React.createElement(_components.a, {\n    href: \"https://github.com/versi786/subway-led-matrix\"\n  }, \"github repo\"), \", these files are already included and will be compiled when you run \", React.createElement(_components.code, null, \"make\"), \" in the root directory. This project does not use the NYCT extensions, but the are available if you like.\"), \"\\n\", React.createElement(_components.p, null, \"Finally, each collection of subway lines has its own realtime url which can be found on the \", React.createElement(_components.a, {\n    href: \"https://api.mta.info/#/subwayRealTimeFeeds\"\n  }, \"Subway Realtime Feeds\"), \" page. These are also already included \", React.createElement(_components.a, {\n    href: \"https://github.com/versi786/subway-led-matrix/blob/master/data/nyct.py#L18\"\n  }, \"here\")), \"\\n\", React.createElement(_components.h1, null, \"Hardware:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Parts List: \", React.createElement(_components.a, {\n    href: \"https://github.com/riffnshred/nhl-led-scoreboard/wiki/Hardware\"\n  }, \"https://github.com/riffnshred/nhl-led-scoreboard/wiki/Hardware\")), \"\\n\", React.createElement(_components.li, null, \"Step by Step Guide: \", React.createElement(_components.a, {\n    href: \"https://github.com/riffnshred/nhl-led-scoreboard/wiki/Step-by-step-guide\"\n  }, \"https://github.com/riffnshred/nhl-led-scoreboard/wiki/Step-by-step-guide\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"I highly reccomend you read the guide above for all the details of how to set up the LED matrix, and the parts/skills required.\"), \"\\n\", React.createElement(_components.h1, null, \"Software:\"), \"\\n\", React.createElement(_components.p, null, \"Installation:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"get clone git@github.com:versi786/subway-led-matrix.git\\ncd ./subway-led-matrix\\n./scripts/install.sh\\n\\necho MTA_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXX >> .env\\n\")), \"\\n\", React.createElement(_components.p, null, \"List all stops available:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"sudo python3 -m main \\\\\\n    --list-stops\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"The easiest way to find the stops you care about is by using \", React.createElement(_components.code, null, \"grep\"), \" for example:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"sudo python3 -m main \\\\\\n    --list-stops \\\\\\n    | grep -i 'grand central'\\n\")), \"\\n\", React.createElement(_components.p, null, \"Running the script, provide whatever stops you like from the output of the previous script:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"sudo python3 -m main \\\\\\n    --led-rows=32 \\\\\\n    --led-cols=64 \\\\\\n    --led-gpio-mapping=adafruit-hat-pwm \\\\\\n    --led-brightness=20 \\\\\\n    --led-slowdown-gpio=4 \\\\\\n    --stop 'Grand Central-42 St' \\\\\\n    --stop 'World Trade Center'\\n\")), \"\\n\", React.createElement(_components.p, null, \"The script must be run as sudo to access the Raspberry Pi's GPIO functionality. For more details on the RGB Matrix check out the library's README here for how to change the matrix parameters \", React.createElement(_components.a, {\n    href: \"https://github.com/hzeller/rpi-rgb-led-matrix#changing-parameters-via-command-line-flags\"\n  }, \"here\")), \"\\n\", React.createElement(_components.h1, null, \"References:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Jeff Kessler's talk at Transportation Camp Philadelphia: \", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=LCIu4zbSNho\"\n  }, \"video\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/nolanbconaway/underground\"\n  }, \"nolanbconaway/underground\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/fsargent/BARTSign\"\n  }, \"fsargent/BARTSign\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/MLB-LED-Scoreboard/mlb-led-scoreboard\"\n  }, \"MLB-LED-Scoreboard/mlb-led-scoreboard\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/riffnshred/nhl-led-scoreboard\"\n  }, \"riffnshred/nhl-led-scoreboard\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/av/Documents/proj/versi786.github.io/content/posts/2022-02-13-diy-subway-led-matrix-sign/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","img","p","h1","h2","code","pre","ul","li","_provideComponents","components","alt","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}